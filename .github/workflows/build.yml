name: myob tech challenge 

on:
  push:
    branches:
      - main

env:
  REPONAME: ${{ github.event.repository.name }}
  WORKSPACE: ${{ github.workspace }}
  client_id: ${{secrets.CLIENT_ID}}
  client_secret: ${{secrets.CLIENT_SECRET}}
  tenant_id: ${{secrets.TENANT_ID}}
  subscription_id: ${{secrets.SUBSCRIPTION_ID}}
  sas_token: ${{secrets.SAS_TOKEN}}
  acr: "weathermyobacr"
  acr_fqdn: "weathermyobacr.azurecr.io"
  az_rg: "azure_infra_rg"


jobs:
  Infra:
    name: "Infra setup in Azure"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          
      - name: Print terraform version
        run: terraform version
      
      - name: Export Azure Login Credentials
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SAS_TOKEN=${{ secrets.SAS_TOKEN }}" >> $GITHUB_ENV
          
      - name: Initalize Terraform
        run: terraform init
        working-directory: infra

      - name: terraform plan
        run: terraform plan -var="client_id=${{secrets.client_id}}" -var="client_secret=${{secrets.client_secret}}" -var="tenant_id=${{secrets.tenant_id}}" -var="subscription_id=${{secrets.subscription_id}}" -var="acr=$acr" -var="rgname=$az_rg" -out=tfplan
        working-directory: infra

      - name: terraform apply
        run: terraform apply -auto-approve "tfplan"
        working-directory: infra
  
  Docker:
    name: "Build and Push Python Docker image"
    needs: Infra
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      
      - name: Export Azure Login Credentials
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SAS_TOKEN=${{ secrets.SAS_TOKEN }}" >> $GITHUB_ENV
          
      - name: Docker build
        run: |
          docker build -t pythonapp . -f DockerFile
          docker tag pythonapp $acr_fqdn/app/pythonapp
        working-directory: app

      - name: Docker Login and Push
        run: |
          docker login $acr_fqdn --username $client_id --password $client_secret
          docker push $acr_fqdn/app/pythonapp
        working-directory: app
  